---
layout:     post
title:      "重构别人代码，顺便吐槽"
subtitle:   "重构"
date:       2018-10-29
author:     "鸿"
header-img: "img/home-bg.jpg"
tags:
    - 重构
---


最近接手了别人的代码，因为不是很喜欢原来的写法，所以我就顺便重构一下，还吐槽一下，记还录一下。


**OC 和 Swift 的混用**

项目本身是一个swift的项目，虽然里面会有一些OC的代码，但是大部分还是用swift写的。我认为，能够用swift的不要用OC的东西，就像String、Array这些基础数据，就不要使用NSString、NSArray之类的。但是，代码里面满是NSString之类的定义，如果全是使用NSSing 那也还勉强，但是各种 as string, as nsstring。何必呢？

![](/img/refactor/refactor-1.png)

完全就是做了很多的无用功，要多写了好多的代码，能少写一行，就少一行。
>能少写一个单词，绝不多写一个。能用Swift的，就不用OC


**啰嗦的代码**

如上图，前三行代码其实就只需要一行代码就搞定了，还要写个判断，完全的就是多余的啊。

```swift
var nick = model?.nickName ?? ""

```
多出来的代码带不来任何的好处，还会带来混乱。代码中到处都是这种代码，完全没有必要。


**超长的函数**

![](/img/refactor/refactor-2.png)

这么长的函数，里面逻辑又不清楚，为了重构这个方法，苦不堪言。 
一个函数不要太长，如果逻辑复杂，那就因该提取出来一些，这样逻辑也清楚了，维护起来也好一些

**重复的代码**

如果一个代码重复用了几次，那就因该抽出来了。  
![](/img/refactor/refactor-3.png)

一模一样啊，一模一样啊，一模一样啊，一模一样啊，一模一样啊。
完全可以合并啊，只写一次啊

**多用guard啊**

代码里面各种if，各种嵌套，导致代码根本不知道怎么看。很多时候，都不知道代码的范围在哪儿了。


**其他**

其他诸如命名不规范什么的，不想吐槽了。

虽然我自己的水平也就那样，但是，还是一言难尽啊！





